<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="13" hostname="TYSS-Praveen" failures="0" tests="25" name="Default test" time="0.352" errors="0" timestamp="2023-05-03T21:28:18 IST">
  <testcase classname="com.qa.nobero.genericutility.BaseClass" name="@BeforeSuite startserver" time="21.173">
    <failure type="io.appium.java_client.service.local.AppiumServerHasNotBeenStartedLocallyException" message="The local appium server has not been started. The given Node.js executable: C:\Program Files\nodejs\node.exe Arguments: [C:\Users\Praveen B\AppData\Roaming\npm\node_modules\appium\build\lib\main.js, --port, 4723, --address, 0.0.0.0] 
Process output: [35m[Appium][39m Welcome to Appium v2.0.0-beta.62
[35m[Appium][39m Attempting to load driver uiautomator2...
[debug] [35m[Appium][39m Requiring driver at C:\Users\Praveen B\.appium\node_modules\appium-uiautomator2-driver
[38;5;0m[HTTP][0m Could not start REST http interface listener. The requested port may already be in use. Please make sure there is no other instance of this server running already.
[35m[Appium][39m Could not configure Appium server. It&amp;apos;s possible that a driver or plugin tried to update the server and failed. Original error: listen EADDRINUSE: address already in use 0.0.0.0:4723
[debug] [35m[Appium][39m Error: listen EADDRINUSE: address already in use 0.0.0.0:4723
[debug] [35m[Appium][39m     at Server.setupListenHandle [as _listen2] (node:net:1740:16)
[debug] [35m[Appium][39m     at listenInCluster (node:net:1788:12)
[debug] [35m[Appium][39m     at doListen (node:net:1937:7)
[debug] [35m[Appium][39m     at processTicksAndRejections (node:internal/process/task_queues:83:21)

">
      <![CDATA[io.appium.java_client.service.local.AppiumServerHasNotBeenStartedLocallyException: The local appium server has not been started. The given Node.js executable: C:\Program Files\nodejs\node.exe Arguments: [C:\Users\Praveen B\AppData\Roaming\npm\node_modules\appium\build\lib\main.js, --port, 4723, --address, 0.0.0.0] 
Process output: [35m[Appium][39m Welcome to Appium v2.0.0-beta.62
[35m[Appium][39m Attempting to load driver uiautomator2...
[debug] [35m[Appium][39m Requiring driver at C:\Users\Praveen B\.appium\node_modules\appium-uiautomator2-driver
[38;5;0m[HTTP][0m Could not start REST http interface listener. The requested port may already be in use. Please make sure there is no other instance of this server running already.
[35m[Appium][39m Could not configure Appium server. It's possible that a driver or plugin tried to update the server and failed. Original error: listen EADDRINUSE: address already in use 0.0.0.0:4723
[debug] [35m[Appium][39m Error: listen EADDRINUSE: address already in use 0.0.0.0:4723
[debug] [35m[Appium][39m     at Server.setupListenHandle [as _listen2] (node:net:1740:16)
[debug] [35m[Appium][39m     at listenInCluster (node:net:1788:12)
[debug] [35m[Appium][39m     at doListen (node:net:1937:7)
[debug] [35m[Appium][39m     at processTicksAndRejections (node:internal/process/task_queues:83:21)


at io.appium.java_client.service.local.AppiumDriverLocalService.start(AppiumDriverLocalService.java:187)
at com.qa.nobero.genericutility.BaseClass.startserver(BaseClass.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:376)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.net.UrlChecker$TimeoutException: Timed out waiting for [http://127.0.0.1:4723/status] to be available after 20006 ms
at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:89)
at io.appium.java_client.service.local.AppiumDriverLocalService.ping(AppiumDriverLocalService.java:152)
at io.appium.java_client.service.local.AppiumDriverLocalService.start(AppiumDriverLocalService.java:174)
... 20 more
Caused by: java.util.concurrent.TimeoutException
at java.base/java.util.concurrent.FutureTask.get(FutureTask.java:204)
at org.openqa.selenium.net.UrlChecker.waitUntilAvailable(UrlChecker.java:87)
... 22 more
]]>
    </failure>
  </testcase> <!-- @BeforeSuite startserver -->
  <testcase classname="com.qa.nobero.genericutility.BaseClass" name="@BeforeTest launchBrowser" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeTest launchBrowser -->
  <testcase classname="com.qa.nobero.genericutility.BaseClass" name="@AfterTest afterTestConfig" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest afterTestConfig -->
  <testcase classname="com.qa.nobero.searchTest.SearchTest" name="ToVerifyApplyFilterAvailabilityInStockIsEnabledAfterValidSearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifyApplyFilterAvailabilityInStockIsEnabledAfterValidSearchTest -->
  <testcase classname="com.qa.nobero.searchTest.SearchTest" name="ToVerifyApplyFilterAvailabilityOutOfStockIsEnabledAfterValidSearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifyApplyFilterAvailabilityOutOfStockIsEnabledAfterValidSearchTest -->
  <testcase classname="com.qa.nobero.searchTest.SearchTest" name="ToVerifyApplyFilterColorAfterValidSearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifyApplyFilterColorAfterValidSearchTest -->
  <testcase classname="com.qa.nobero.searchTest.SearchTest" name="ToVerifyApplyFilterPriceAfterValidSearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifyApplyFilterPriceAfterValidSearchTest -->
  <testcase classname="com.qa.nobero.searchTest.SearchTest" name="ToVerifyApplyFilterSizeIsEnabledAfterValidSearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifyApplyFilterSizeIsEnabledAfterValidSearchTest -->
  <testcase classname="com.qa.nobero.searchTest.SearchTest" name="ToVerifyNotifyMeWhenAvailableAfterValidSearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifyNotifyMeWhenAvailableAfterValidSearchTest -->
  <testcase classname="com.qa.nobero.searchTest.SearchTest" name="ToVerifySizeGuideAfterValidSearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifySizeGuideAfterValidSearchTest -->
  <testcase classname="com.qa.nobero.searchTest.SearchTest" name="ToVerifySortByFeaturedIsEnabledAfterValidSearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifySortByFeaturedIsEnabledAfterValidSearchTest -->
  <testcase classname="com.qa.nobero.searchTest.SearchTest" name="ToVerifySortByNewArrivalIsEnabledAfterValidSearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifySortByNewArrivalIsEnabledAfterValidSearchTest -->
  <testcase classname="com.qa.nobero.searchTest.SearchTest" name="ToVerifySortByPriceHighToLowIsEnabledAfterValidSearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifySortByPriceHighToLowIsEnabledAfterValidSearchTest -->
  <testcase classname="com.qa.nobero.searchTest.SearchTest" name="ToVerifySortByPriceLowToHighIsEnabledAfterValidSearchTest" time="0.001">
    <skipped/>
  </testcase> <!-- ToVerifySortByPriceLowToHighIsEnabledAfterValidSearchTest -->
  <testcase classname="com.qa.nobero.searchTest.SearchTest" name="ToVerifyThatPDPIsDisplayedAfterValidSearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifyThatPDPIsDisplayedAfterValidSearchTest -->
  <testcase classname="com.qa.nobero.searchTest.SearchTest" name="ToVerifyThatPLPIsDisplayedAfterValidSearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifyThatPLPIsDisplayedAfterValidSearchTest -->
  <testcase classname="com.qa.nobero.searchTest.SearchTest" name="ToVerifyThatProductIsMovedToCartAfterValidSearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifyThatProductIsMovedToCartAfterValidSearchTest -->
  <testcase classname="com.qa.nobero.cartTest.cartTest" name="ToVerifyApplyFilterforAvailabilityTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifyApplyFilterforAvailabilityTest -->
  <testcase classname="com.qa.nobero.cartTest.cartTest" name="ToVerifyApplyFilterforColorTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifyApplyFilterforColorTest -->
  <testcase classname="com.qa.nobero.cartTest.cartTest" name="ToVerifyApplyFilterforSizeTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifyApplyFilterforSizeTest -->
  <testcase classname="com.qa.nobero.cartTest.cartTest" name="ToVerifyProductIsAddedToCartAfterSearchTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifyProductIsAddedToCartAfterSearchTest -->
  <testcase classname="com.qa.nobero.cartTest.cartTest" name="ToVerifyProductIsAddedToCartTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifyProductIsAddedToCartTest -->
  <testcase classname="com.qa.nobero.cartTest.cartTest" name="ToVerifySortByBestSellingTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifySortByBestSellingTest -->
  <testcase classname="com.qa.nobero.cartTest.cartTest" name="ToVerifySortByFeaturedTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifySortByFeaturedTest -->
  <testcase classname="com.qa.nobero.cartTest.cartTest" name="ToVerifySortByNewArrivalTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifySortByNewArrivalTest -->
  <testcase classname="com.qa.nobero.cartTest.cartTest" name="ToVerifySortByPriceHighToLowTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifySortByPriceHighToLowTest -->
  <testcase classname="com.qa.nobero.cartTest.cartTest" name="ToVerifySortByPriceLowToHighTest" time="0.0">
    <skipped/>
  </testcase> <!-- ToVerifySortByPriceLowToHighTest -->
  <testcase classname="com.qa.nobero.junk.launchURLTest" name="fetchVariantID" time="0.0">
    <skipped/>
  </testcase> <!-- fetchVariantID -->
  <testcase classname="com.qa.nobero.cartTest.cartTest" name="ToVerifyApplyFilterforPriceTest" time="0.0">
    <ignored/>
  </testcase> <!-- ToVerifyApplyFilterforPriceTest -->
  <testcase classname="com.qa.nobero.genericutility.BaseClass" name="@AfterTest afterTestConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTestConfig -->
  <testcase classname="com.qa.nobero.genericutility.BaseClass" name="@AfterTest afterTestConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTestConfig -->
  <testcase classname="com.qa.nobero.genericutility.BaseClass" name="@BeforeSuite startserver" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite startserver -->
  <testcase classname="com.qa.nobero.genericutility.BaseClass" name="@AfterSuite stopServer" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite stopServer -->
  <testcase classname="com.qa.nobero.genericutility.BaseClass" name="@BeforeTest launchBrowser" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest launchBrowser -->
  <testcase classname="com.qa.nobero.genericutility.BaseClass" name="@BeforeSuite startserver" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite startserver -->
  <testcase classname="com.qa.nobero.genericutility.BaseClass" name="@BeforeSuite startserver" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite startserver -->
  <testcase classname="com.qa.nobero.genericutility.BaseClass" name="@AfterTest afterTestConfig" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTestConfig -->
  <testcase classname="com.qa.nobero.junk.launchURLTest" name="launchBrowser" time="0.0">
    <ignored/>
  </testcase> <!-- launchBrowser -->
  <testcase classname="com.qa.nobero.genericutility.BaseClass" name="@AfterSuite stopServer" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite stopServer -->
  <testcase classname="com.qa.nobero.genericutility.BaseClass" name="@BeforeTest launchBrowser" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest launchBrowser -->
  <testcase classname="com.qa.nobero.genericutility.BaseClass" name="@AfterSuite stopServer" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite stopServer -->
</testsuite> <!-- Default test -->
